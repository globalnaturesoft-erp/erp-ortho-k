<% if !(@global_filters[:categories].present? and @global_filters[:letters].present? and @global_filters[:numbers_diameters].present?) %>
  <div class="alert alert-warning">
      <p>Vui lòng chọn các tham số bắt buộc:
          <br>- <strong>Loại hàng</strong>
          <br>- <strong>Chữ</strong>
          <br>- <strong>Số/Đường kính</strong>
      </p>
  </div>
<% else %>

  <div class="custom-show text-center">
      <h4 class="font-yellow bold uppercase mb-15">
          Báo cáo tồn kho
          <% if @period.present? %>
              <%= @period.name %>
          <% else %>
              <%= 'Từ ' + @from_date.strftime('%d/%m/%Y') if !@from_date.nil? %> <%= ' Đến ' + @to_date.strftime('%d/%m/%Y') if !@to_date.nil? %>
          <% end %>
      </h4>
  </div>

  <div class="text-right mb-10">
      <a target="_blank"
          href="<%= erp_ortho_k.report_custom_area_xlsx_backend_inventory_index_path(params.to_unsafe_hash.merge({format: 'xlsx'})) %>"
          target="_blank"
          class="btn btn-primary"
      >Xuất excel</a>
  </div>
  <table class="table table-bordered table-advance order-column">
    <tr>
        <th rowspan="2" class="text-center bg-primary">Loại</th>
        <th rowspan="2" class="text-center bg-primary">Chữ</th>
        <th rowspan="2" class="text-center bg-primary">Số</th>
        <th rowspan="2" class="text-center bg-primary">Đường kính</th>
        <th rowspan="2" class="text-center bg-primary">Dư đầu</th>
        <th rowspan="2" class="text-center bg-primary" title="Nhập NCC">Nhập NCC</th>
        <th rowspan="2" class="text-center bg-primary" title="Nhập kiểm kho">Nhập KK</th>
        <th colspan="<%= @states.count %>" class="text-center bg-primary text-nowrap" title="Khách trả; Ký gửi trả">Hoàn kho</th>
        <th rowspan="2" class="text-center bg-primary" title="Xuất bán; Cho mượn/Ký gửi; Tặng quà">Xuất</th>
        <th rowspan="2" class="text-center bg-primary" title="Hủy kho; Kiểm kho">Xuất KK</th>
        <th rowspan="2" class="text-center bg-primary" title="Kiểm trạng thái">Xuất KTT</th>
        <th rowspan="2" class="text-center bg-primary">Dư cuối</th>
    </tr>
    <tr>
        <% @states.each do |state| %>
            <th class="text-center bg-primary text-nowrap" width="5%"><%= state.name %></th>
        <% end %>
    </tr>
    <% counts = {} %>
    <% @rows.each_with_index do |row, index| %>
        <% counts[row[:category].name] = {} %>
        <% row[:letter_groups].each_with_index do |lg,index2| %>
            <% lg[:numbers_diameters].each_with_index do |nd,index3| %>
                <%
                    query = @product_query
                    # filter by properties
                    [nd[:diameter_ids], lg[:letter_ids], nd[:number_ids]].each do |ids|
                        if ids.present?
                          if !ids.kind_of?(Array)
                            query = query.where("erp_products_products.cache_properties LIKE '%[\"#{ids}\",%'")
                          else
                            ids = (ids.reject { |c| c.empty? })
                            if !ids.empty?
                              qs = []
                              ids.each do |x|
                                qs << "(erp_products_products.cache_properties LIKE '%[\"#{x}\",%')"
                              end
                              query = query.where("(#{qs.join(" OR ")})")
                            end
                          end
                        end
                    end

                    product_ids = query.select('id').where(category_id: row[:category].id)
                %>
                <% product_ids = -1 if product_ids.count == 0 %>
                <% filters = @global_filters.clone.merge({product_id: product_ids}) %>

                <tr>
                    <td class="text-bold text-primary">
                        <%= row[:category].name if index2 == 0 and index3 == 0 %>
                    </td>
                    <td class="text-bold">
                        <% if index3 == 0 %>
                            <% values = Erp::Products::PropertiesValue.where(id: lg[:letter_ids]).map(&:value) %>
                            <%= values.first %> -> <%= values.last %>
                        <% end %>
                    </td>
                    <td>
                        <% values = Erp::Products::PropertiesValue.where(id: nd[:number_ids]).map(&:value) %>
                        <%= values.first %> -> <%= values.last %>
                    </td>
                    <td>
                        <% values = Erp::Products::PropertiesValue.where(id: nd[:diameter_ids]).map(&:value) %>
                        <%= values.first %> -> <%= values.last %>
                    </td>


                    <td class="text-center text-bold">
                        <%
                            begin_params = filters.clone
                            begin_params[:to_date] = filters[:from_date]
                            begin_params[:from_date] = nil
                        %>
                        <%= counts[row[:category].name][0] = Erp::Products::Product.get_stock_real(begin_params) %>
                    </td>
                    <td class="text-center">
                        <%
                            count = Erp::Products::Product.get_qdelivery_import(filters.clone.merge({
                                delivery_type: Erp::Qdeliveries::Delivery::TYPE_PURCHASE_IMPORT
                            }))
                        %>
                        <%= counts[row[:category].name][1] = count %>
                    </td>
                    <td class="text-center">
                        <%
                            count = Erp::Products::Product.get_stock_check_import(filters)
                        %>
                        <%= counts[row[:category].name][2] = count %>
                    </td>
                    <% counts[row[:category].name][3] = {} %>
                    <% @states.each do |state| %>
                        <td class="text-center">
                            <%
                              count = Erp::Products::Product.get_qdelivery_import(filters.clone.merge({
                                    delivery_type: [
                                        Erp::Qdeliveries::Delivery::TYPE_CUSTOM_IMPORT,
                                        Erp::Qdeliveries::Delivery::TYPE_SALES_IMPORT
                                    ],
                                    state: state
                              }))
                            %>
                            <%= counts[row[:category].name][3][state.id] = count %>
                        </td>
                    <% end %>
                    <td class="text-center">
                        <%
                            count = Erp::Products::Product.get_qdelivery_export(filters.clone.merge({
                                delivery_type: [
                                  Erp::Qdeliveries::Delivery::TYPE_CUSTOM_EXPORT,
                                  Erp::Qdeliveries::Delivery::TYPE_SALES_EXPORT
                                ]
                            }))
                            count += Erp::Products::Product.get_gift_given_export(filters)
                        %>
                        <%= counts[row[:category].name][4] = count %>
                    </td>
                    <td class="text-center">
                        <%
                            count = Erp::Products::Product.get_damage_record_export(filters)
                            count += Erp::Products::Product.get_stock_check_export(filters)
                        %>
                        <%= counts[row[:category].name][5] = count %>
                    </td>
                    <td class="text-center">
                        <%
                          count = (filters[:state_id].present? ? Erp::Products::Product.get_state_check_export(filters) : '--')
                        %>
                        <%= counts[row[:category].name][6] = count %>
                    </td>
                    <td class="text-center text-bold">
                        <%
                            end_params = filters.clone
                            end_params[:from_date] = nil
                        %>
                        <%= counts[row[:category].name][7] = Erp::Products::Product.get_stock_real(end_params) %>
                    </td>
                </tr>
            <% end %>
        <% end %>


        <%
            query = @product_query
            product_ids = query.select('id').where(category_id: row[:category].id)
        %>
        <% product_ids = -1 if product_ids.count == 0 %>
        <% filters = @global_filters.clone.merge({product_id: product_ids}) %>

        <tr>
            <td class="text-bold bg-grey text-right" colspan="4">
                Tổng cộng
            </td>
            <td class="text-center bg-grey text-bold">
                <%= counts[row[:category].name][0] %>
            </td>
            <td class="text-center bg-grey">
                <%= counts[row[:category].name][1] %>
            </td>
            <td class="text-center bg-grey">
                <%= counts[row[:category].name][2] %>
            </td>
            <% @states.each do |state| %>
                <td class="text-center bg-grey">
                    <%= counts[row[:category].name][3][state.id] %>
                </td>
            <% end %>
            <td class="text-center bg-grey">
                <%= counts[row[:category].name][4] %>
            </td>
            <td class="text-center bg-grey">
                <%= counts[row[:category].name][5] %>
            </td>
            <td class="text-center bg-grey">
                <%= counts[row[:category].name][6] %>
            </td>
            <td class="text-center bg-grey text-bold">
                <%= counts[row[:category].name][7] %>
            </td>
        </tr>
    <% end %>
  </table>
<% end %>
